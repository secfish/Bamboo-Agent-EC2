---
- hosts: localserver
  name: creation Bamboo Agent 
  gather_facts: False
  vars_files: 
    - var.yml 
  roles:
    - bamboo-agent-asg-terminate 
    - bamboo-agent-ami-terminate
    - bamboo-agent-ami-precreate

- hosts: bamboo-agent-ami-hosts
  name:  Configuration Bamboo Agent AMI template instance 
  gather_facts: true
  become: yes
  vars_files: 
    - var.yml 
  roles:
    - bamboo-agent-config

- hosts: localserver
  vars_files: 
    - var.yml 
  tasks:
    - name: Collecting Bamboo Agent AMI template instance information
      community.aws.ec2_instance_info:
        profile: "{{ aws_profile_name }}"
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ aws_ec2_instance_name }}"
          "tag:AmiName": "{{ aws_ec2_ami_name }}"
          instance-state-name: ["running"]
      register: ec2_ami_temp_info

    - name: Get current timestamp string
      shell: "date +%Y-%m-%d-%H-%M-%S"
      register: tstamp

    - name: Creating Bamboo Agent AMI image 
      ec2_ami:
        profile: "{{ aws_profile_name }}"
        instance_id: "{{ ec2_ami_temp_info.instances[0].instance_id }}"  
        wait: yes
        name: "{{aws_ec2_ami_name}}-{{ tstamp.stdout }}" 
        tags:
          Name: "{{aws_ec2_ami_name}}"
      register: ec2_ami_info
      when: ec2_ami_temp_info.instances|length > 0  
    
    - name: create ec2 launch config
      community.aws.ec2_lc:
        name: Bamboo-Agent-ec2-lc-"{{ tstamp.stdout }}"
        image_id: "{{ ec2_ami_info.image_id }}"
        key_name: "{{ aws_keypair_name }}"
        region: "{{ aws_region }}"
        security_groups: "{{ aws_security_group_name }}"
        instance_type: "{{ aws_ec2_instance_type }}"
        assign_public_ip: yes
      register: ec2_lc_info

    - name: create ec2 autoscaling group 
      community.aws.ec2_asg:
        name: "{{ aws_ec2_asg_name }}-{{ tstamp.stdout }}"
        launch_config_name: "{{ ec2_lc_info.name}}"
        health_check_period: 60
        health_check_type: EC2
        replace_all_instances: yes
        min_size: "{{ aws_ec2_asg_min_size }}"
        max_size: "{{ aws_ec2_asg_max_size }}"
        desired_capacity: "{{ aws_ec2_asg_desired_capacity }}"
        wait_for_instances: false
        region: "{{ aws_region }}"
        tags:
          - Name: "{{aws_ec2_asg_name}}"

    - name: Terminate Bamboo Agent Template instance
      amazon.aws.ec2:
          instance_ids: "{{ item.instance_id }}"
          region: "{{ aws_region }}"
          profile: "{{ aws_profile_name }}"
          state: absent 
          wait: no
      with_items: "{{ec2_ami_temp_info.instances}}" 
      when: ec2_ami_temp_info.instances|length > 0   

     
