---
- hosts: localserver
  name: creation Bamboo Agent 
  gather_facts: False
  vars_files: 
    - var.yml 
  roles:
    - bamboo-agent-asg-terminate 

  tasks:
    - name: Get current timestamp string
      shell: "date +%Y-%m-%d-%H-%M-%S"
      register: tstamp
    
    - name: Collecting ec2 ami information
      amazon.aws.ec2_ami_info:
          profile: "{{ aws_profile_name }}"
          region: "{{ aws_region }}"
          filters:
            name: "{{ aws_ec2_ami_name }}"
      register: ec2_ami_info

    - name: create ec2 launch config
      community.aws.ec2_lc:
        name: "Bamboo-Agent-ec2-lc-{{ tstamp.stdout }}"
        image_id: "{{ ec2_ami_info.images[0].image_id }}"
        key_name: "{{ aws_keypair_name }}"
        region: "{{ aws_region }}"
        security_groups: "{{ aws_security_group_name }}"
        instance_type: "{{ aws_ec2_instance_type }}"
        assign_public_ip: "{{ aws_ec2_assign_public_ip }}"
      register: ec2_lc_info
      when: ec2_ami_info.images|length > 0 

    - name: create ec2 autoscaling group 
      community.aws.ec2_asg:
        name: "{{ aws_ec2_asg_tag_name }}-{{ tstamp.stdout }}"
        vpc_zone_identifier: ["{{ aws_subnet_id }}"]
        launch_config_name: "{{ ec2_lc_info.name}}"
        health_check_period: 60
        health_check_type: EC2
        replace_all_instances: yes
        min_size: "{{ aws_ec2_asg_min_size }}"
        max_size: "{{ aws_ec2_asg_max_size }}"
        desired_capacity: "{{ aws_ec2_asg_desired_capacity }}"
        wait_for_instances: false
        region: "{{ aws_region }}"
        tags:
          - Name: "{{aws_ec2_asg_tag_name}}"

 

     
